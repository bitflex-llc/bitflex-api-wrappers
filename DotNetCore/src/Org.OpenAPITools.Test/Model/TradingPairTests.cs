/* 
 * BITFLEX Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing TradingPair
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TradingPairTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TradingPair
        //private TradingPair instance;

        public TradingPairTests()
        {
            // TODO uncomment below to create an instance of TradingPair
            //instance = new TradingPair();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TradingPair
        /// </summary>
        [Fact]
        public void TradingPairInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TradingPair
            //Assert.IsInstanceOfType<TradingPair> (instance, "variable 'instance' is a TradingPair");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'MarketId'
        /// </summary>
        [Fact]
        public void MarketIdTest()
        {
            // TODO unit test for the property 'MarketId'
        }
        /// <summary>
        /// Test the property 'CurrencyId'
        /// </summary>
        [Fact]
        public void CurrencyIdTest()
        {
            // TODO unit test for the property 'CurrencyId'
        }
        /// <summary>
        /// Test the property 'PairCompleteName'
        /// </summary>
        [Fact]
        public void PairCompleteNameTest()
        {
            // TODO unit test for the property 'PairCompleteName'
        }
        /// <summary>
        /// Test the property 'Active'
        /// </summary>
        [Fact]
        public void ActiveTest()
        {
            // TODO unit test for the property 'Active'
        }
        /// <summary>
        /// Test the property 'MinimumTradeAmount'
        /// </summary>
        [Fact]
        public void MinimumTradeAmountTest()
        {
            // TODO unit test for the property 'MinimumTradeAmount'
        }
        /// <summary>
        /// Test the property 'Order'
        /// </summary>
        [Fact]
        public void OrderTest()
        {
            // TODO unit test for the property 'Order'
        }
        /// <summary>
        /// Test the property 'Leverage'
        /// </summary>
        [Fact]
        public void LeverageTest()
        {
            // TODO unit test for the property 'Leverage'
        }

    }

}

/* 
 * BITFLEX Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ERC20Token
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ERC20TokenTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ERC20Token
        //private ERC20Token instance;

        public ERC20TokenTests()
        {
            // TODO uncomment below to create an instance of ERC20Token
            //instance = new ERC20Token();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ERC20Token
        /// </summary>
        [Fact]
        public void ERC20TokenInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ERC20Token
            //Assert.IsInstanceOfType<ERC20Token> (instance, "variable 'instance' is a ERC20Token");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'CurrencyId'
        /// </summary>
        [Fact]
        public void CurrencyIdTest()
        {
            // TODO unit test for the property 'CurrencyId'
        }
        /// <summary>
        /// Test the property 'ContractAddress'
        /// </summary>
        [Fact]
        public void ContractAddressTest()
        {
            // TODO unit test for the property 'ContractAddress'
        }
        /// <summary>
        /// Test the property 'Decimals'
        /// </summary>
        [Fact]
        public void DecimalsTest()
        {
            // TODO unit test for the property 'Decimals'
        }
        /// <summary>
        /// Test the property 'TokenBlockNumber'
        /// </summary>
        [Fact]
        public void TokenBlockNumberTest()
        {
            // TODO unit test for the property 'TokenBlockNumber'
        }

    }

}

/* 
 * BITFLEX Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing BalanceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BalanceApiTests : IDisposable
    {
        private BalanceApi instance;

        public BalanceApiTests()
        {
            instance = new BalanceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BalanceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BalanceApi
            //Assert.IsType(typeof(BalanceApi), instance, "instance is a BalanceApi");
        }

        
        /// <summary>
        /// Test BalanceCurrencyGet
        /// </summary>
        [Fact]
        public void BalanceCurrencyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currency = null;
            //instance.BalanceCurrencyGet(currency);
            
        }
        
        /// <summary>
        /// Test BalanceDepositCurrencyAddressGet
        /// </summary>
        [Fact]
        public void BalanceDepositCurrencyAddressGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currency = null;
            //instance.BalanceDepositCurrencyAddressGet(currency);
            
        }
        
        /// <summary>
        /// Test BalanceDepositCurrencyAddressPost
        /// </summary>
        [Fact]
        public void BalanceDepositCurrencyAddressPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currency = null;
            //instance.BalanceDepositCurrencyAddressPost(currency);
            
        }
        
        /// <summary>
        /// Test BalanceRoute
        /// </summary>
        [Fact]
        public void BalanceRouteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.BalanceRoute();
            
        }
        
        /// <summary>
        /// Test BalanceWithdrawCurrencyPageGet
        /// </summary>
        [Fact]
        public void BalanceWithdrawCurrencyPageGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currency = null;
            //instance.BalanceWithdrawCurrencyPageGet(currency);
            
        }
        
        /// <summary>
        /// Test BalanceWithdrawCurrencyPost
        /// </summary>
        [Fact]
        public void BalanceWithdrawCurrencyPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currency = null;
            //PostWithdrawRequest postWithdrawRequest = null;
            //instance.BalanceWithdrawCurrencyPost(currency, postWithdrawRequest);
            
        }
        
    }

}

/* 
 * BITFLEX Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ChangeTracker
    /// </summary>
    [DataContract]
    public partial class ChangeTracker :  IEquatable<ChangeTracker>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets QueryTrackingBehavior
        /// </summary>
        [DataMember(Name="queryTrackingBehavior", EmitDefaultValue=false)]
        public QueryTrackingBehavior? QueryTrackingBehavior { get; set; }
        /// <summary>
        /// Gets or Sets DeleteOrphansTiming
        /// </summary>
        [DataMember(Name="deleteOrphansTiming", EmitDefaultValue=false)]
        public CascadeTiming? DeleteOrphansTiming { get; set; }
        /// <summary>
        /// Gets or Sets CascadeDeleteTiming
        /// </summary>
        [DataMember(Name="cascadeDeleteTiming", EmitDefaultValue=false)]
        public CascadeTiming? CascadeDeleteTiming { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChangeTracker" /> class.
        /// </summary>
        /// <param name="autoDetectChangesEnabled">autoDetectChangesEnabled.</param>
        /// <param name="lazyLoadingEnabled">lazyLoadingEnabled.</param>
        /// <param name="queryTrackingBehavior">queryTrackingBehavior.</param>
        /// <param name="deleteOrphansTiming">deleteOrphansTiming.</param>
        /// <param name="cascadeDeleteTiming">cascadeDeleteTiming.</param>
        /// <param name="context">context.</param>
        public ChangeTracker(bool autoDetectChangesEnabled = default(bool), bool lazyLoadingEnabled = default(bool), QueryTrackingBehavior? queryTrackingBehavior = default(QueryTrackingBehavior?), CascadeTiming? deleteOrphansTiming = default(CascadeTiming?), CascadeTiming? cascadeDeleteTiming = default(CascadeTiming?), DbContext context = default(DbContext))
        {
            this.AutoDetectChangesEnabled = autoDetectChangesEnabled;
            this.LazyLoadingEnabled = lazyLoadingEnabled;
            this.QueryTrackingBehavior = queryTrackingBehavior;
            this.DeleteOrphansTiming = deleteOrphansTiming;
            this.CascadeDeleteTiming = cascadeDeleteTiming;
            this.Context = context;
        }
        
        /// <summary>
        /// Gets or Sets AutoDetectChangesEnabled
        /// </summary>
        [DataMember(Name="autoDetectChangesEnabled", EmitDefaultValue=false)]
        public bool AutoDetectChangesEnabled { get; set; }

        /// <summary>
        /// Gets or Sets LazyLoadingEnabled
        /// </summary>
        [DataMember(Name="lazyLoadingEnabled", EmitDefaultValue=false)]
        public bool LazyLoadingEnabled { get; set; }

        /// <summary>
        /// Gets or Sets Context
        /// </summary>
        [DataMember(Name="context", EmitDefaultValue=false)]
        public DbContext Context { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ChangeTracker {\n");
            sb.Append("  AutoDetectChangesEnabled: ").Append(AutoDetectChangesEnabled).Append("\n");
            sb.Append("  LazyLoadingEnabled: ").Append(LazyLoadingEnabled).Append("\n");
            sb.Append("  QueryTrackingBehavior: ").Append(QueryTrackingBehavior).Append("\n");
            sb.Append("  DeleteOrphansTiming: ").Append(DeleteOrphansTiming).Append("\n");
            sb.Append("  CascadeDeleteTiming: ").Append(CascadeDeleteTiming).Append("\n");
            sb.Append("  Context: ").Append(Context).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ChangeTracker);
        }

        /// <summary>
        /// Returns true if ChangeTracker instances are equal
        /// </summary>
        /// <param name="input">Instance of ChangeTracker to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ChangeTracker input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AutoDetectChangesEnabled == input.AutoDetectChangesEnabled ||
                    this.AutoDetectChangesEnabled.Equals(input.AutoDetectChangesEnabled)
                ) && 
                (
                    this.LazyLoadingEnabled == input.LazyLoadingEnabled ||
                    this.LazyLoadingEnabled.Equals(input.LazyLoadingEnabled)
                ) && 
                (
                    this.QueryTrackingBehavior == input.QueryTrackingBehavior ||
                    this.QueryTrackingBehavior.Equals(input.QueryTrackingBehavior)
                ) && 
                (
                    this.DeleteOrphansTiming == input.DeleteOrphansTiming ||
                    this.DeleteOrphansTiming.Equals(input.DeleteOrphansTiming)
                ) && 
                (
                    this.CascadeDeleteTiming == input.CascadeDeleteTiming ||
                    this.CascadeDeleteTiming.Equals(input.CascadeDeleteTiming)
                ) && 
                (
                    this.Context == input.Context ||
                    (this.Context != null &&
                    this.Context.Equals(input.Context))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.AutoDetectChangesEnabled.GetHashCode();
                hashCode = hashCode * 59 + this.LazyLoadingEnabled.GetHashCode();
                hashCode = hashCode * 59 + this.QueryTrackingBehavior.GetHashCode();
                hashCode = hashCode * 59 + this.DeleteOrphansTiming.GetHashCode();
                hashCode = hashCode * 59 + this.CascadeDeleteTiming.GetHashCode();
                if (this.Context != null)
                    hashCode = hashCode * 59 + this.Context.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
